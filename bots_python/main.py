 #–ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –Ω—É–∂–Ω—ã–µ –º–æ–¥—É–ª–∏
from aiogram import Bot, Dispatcher, types
from aiogram.filters import Command
import asyncio
import aiohttp
from dotenv import load_dotenv
import os
from handlers import function
from aiohttp import web


# –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –∏–∑ —Ñ–∞–π–ª–∞ .env
load_dotenv()

# –ü–æ–ª—É—á–∞–µ–º —Ç–æ–∫–µ–Ω—ã –∏–∑ .env
key = os.getenv('FBOT_TOKEN')
dog = os.getenv('DOG_TOKEN')
cats = os.getenv('CATS_TOKEN')
wea = os.getenv("WEA_TOKEN")

# –°–æ–∑–¥–∞—ë–º —ç–∫–∑–µ–º–ø–ª—è—Ä—ã –±–æ—Ç–∞ –∏ –¥–∏—Å–ø–µ—Ç—á–µ—Ä–∞
bot = Bot(token=key)
dp=Dispatcher()
dp.include_router(function.router)

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—á–∏—Å—Ç–∫–∏ –∞–ø–¥–µ–π—Ç–æ–≤ (—á—Ç–æ–±—ã —Å—Ç–∞—Ä—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è –Ω–µ –º–µ—à–∞–ª–∏ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ –±–æ—Ç–∞)
async def clear_updates():
    url = f"https://api.telegram.org/bot{key}/getUpdates"
    async with aiohttp.ClientSession() as session:
        async with session.get(url) as resp:
            data = await resp.json()
            print("–û—Ç–≤–µ—Ç API:", data)
        if data.get("result"):
            last_update_id = data["result"][-1]["update_id"]
            await session.get(f"{url}?offset={last_update_id + 1}")
            print(f"–û—á–∏—Å—Ç–∏–ª –∞–ø–¥–µ–π—Ç—ã –¥–æ update_id={last_update_id}")
        else:
            print("–ù–µ—Ç –Ω–æ–≤—ã—Ö –∞–ø–¥–µ–π—Ç–æ–≤")
            print("–±–æ—Ç –∑–∞–ø—É—â–µ–Ω")

# –ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞
async def main():
    try:
        print("–ü–µ—Ä–µ–¥ –∑–∞–ø—É—Å–∫–æ–º –±–æ—Ç–∞ –æ—á–∏—â–∞–µ–º –æ—á–µ—Ä–µ–¥—å –∞–ø–¥–µ–π—Ç–æ–≤...")
        await clear_updates()
    except KeyboardInterrupt:
        print("–ë–æ—Ç –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –≤—Ä—É—á–Ω—É—é")
    finally:
        await bot.session.close()

    # –ó–∞–ø—É—Å–∫–∞–µ–º –¥–∏—Å–ø–µ—Ç—á–µ—Ä (–±–æ—Ç –Ω–∞—á–∏–Ω–∞–µ—Ç –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏—è)
    await dp.start_polling(bot)

# –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
if __name__ == "__main__":
    asyncio.run(main()) 



   # üëá –û–±—ä—è–≤–ª—è–µ–º —Ö–µ–Ω–¥–ª–µ—Ä ‚Äî —Ç–æ, —á—Ç–æ –±—É–¥–µ—Ç –≤–æ–∑–≤—Ä–∞—â–∞—Ç—å "I'm alive!"
async def handle(request):
    return web.Response(text="I'm alive!")

# üëá –°–æ–∑–¥–∞—ë–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∏ –¥–æ–±–∞–≤–ª—è–µ–º –º–∞—Ä—à—Ä—É—Ç /
app = web.Application()
app.add_routes([web.get('/', handle)])

# üëá –ü–æ–ª—É—á–∞–µ–º –ø–æ—Ä—Ç –æ—Ç Render –∏–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–µ–º 8000 –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
port = int(os.environ.get("PORT", 8000))

# üëá –ó–∞–ø—É—Å–∫–∞–µ–º —Å–µ—Ä–≤–µ—Ä
web.run_app(app, port=port)







     
